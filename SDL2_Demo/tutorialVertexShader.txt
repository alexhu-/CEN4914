#version 330 core

layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoords;
layout (location = 3) in ivec4 BoneIDs;
layout (location = 4) in vec4 Weights;

out vec3 normal_modelspace;
out vec3 position_modelspace;
out vec2 TexCoords;

const int MAX_BONES = 100;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;
uniform mat4 gBones[MAX_BONES];

void main()
{
	mat4 BoneTransform = gBones[BoneIDs[0]] * Weights[0];
    BoneTransform += gBones[BoneIDs[1]] * Weights[1];
    BoneTransform += gBones[BoneIDs[2]] * Weights[2];
    BoneTransform += gBones[BoneIDs[3]] * Weights[3];
	vec4 PosL = BoneTransform * vec4(position, 1.0);

	vec4 PosL_modelspace = model * PosL;

	position_modelspace = vec3(PosL_modelspace);
	normal_modelspace = mat3(inverse(model)) * normal;

	gl_Position = proj * view * PosL_modelspace;
	TexCoords = texCoords;
}